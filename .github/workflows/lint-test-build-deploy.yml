name: Lint, Test & Build

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

jobs:
  lint-test-build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [10.x, 12.x, 14.x]

    steps:
      - name: "[SETUP] Clone repository"
        uses: actions/checkout@v2

      - name: "[SETUP] Enable Node v${{ matrix.node-version }}"
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: "[SETUP] Get yarn cache path"
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"

      - name: "[SETUP] (Re)store yarn cache"
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: "[SETUP] Install dependencies"
        run: yarn

      - name: "Lint all code"
        run: yarn lint

      - name: "Build i18n resource bundles"
        run: yarn workspace gluco-check-common run build

      - name: "Test CORE package"
        run: yarn workspace gluco-check-core run test:cov

      - name: "Build CORE package"
        run: yarn workspace gluco-check-core run build

      - name: "Build WEBHOOKS"
        run: yarn workspace gluco-check-webhooks run build

      - name: "Test FRONTEND"
        run: yarn workspace gluco-check-frontend run test:ci

      - name: "Build FRONTEND"
        run: yarn workspace gluco-check-frontend run build

      - name: "Deploy WEBHOOKS"
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: w9jds/firebase-action@master
        with:
          args: deploy --only functions
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          PROJECT_PATH: ./gluco-check-webhooks
          PROJECT_ID: gluco-check-nightly

      - name: "Deploy FRONTEND"
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: w9jds/firebase-action@master
        with:
          args: deploy --only hosting
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          PROJECT_PATH: ./gluco-check-frontend
          PROJECT_ID: gluco-check-nightly

      - name: "Upload coverage results"
        run: bash <(curl -s https://codecov.io/bash)
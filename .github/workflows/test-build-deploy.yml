name: Test, Build & Deploy

on:
  pull_request:
    branches: [main]
  push:
    branches: [main,production]

jobs:
  test-build-deploy:
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [10.x, 12.x, 14.x]

    steps:
      
      - name: "[SETUP] Select build target"
        id: target
        run: |
          # Deploy when pushing to 'main' or 'production'
          if [[ "${{ matrix.node-version }}" == "14.x" ]]; then 
            if [[ "${{ github.ref }}" == "refs/heads/main"  ||  "${{ github.ref }}" == "refs/heads/production" ]]; then
              echo "::set-output name=DEPLOY::true"
              echo "Commit will be deployed after building"
            else
              echo "Not on main or production branch: Deployment will be skipped"
            fi

          else
            echo "Not using Node v14: Deployment will be skipped"
          fi

          # Depending on branch, output production or nightly env vars
          if [[ "${{ github.ref }}" == "refs/heads/production" ]]; then
            echo "::set-output name=REACT_APP_FIREBASE_API_KEY::${{ secrets.PROD_REACT_APP_FIREBASE_API_KEY }}"
            echo "::set-output name=REACT_APP_FIREBASE_AUTH_DOMAIN::${{ secrets.PROD_REACT_APP_FIREBASE_AUTH_DOMAIN }}"
            echo "::set-output name=REACT_APP_FIREBASE_DB_URL::${{ secrets.PROD_REACT_APP_FIREBASE_DB_URL }}"
            echo "::set-output name=REACT_APP_FIREBASE_PROJECT_ID::${{ secrets.PROD_REACT_APP_FIREBASE_PROJECT_ID }}"
            echo "::set-output name=REACT_APP_FIREBASE_STORAGE_BUCKET::${{ secrets.PROD_REACT_APP_FIREBASE_STORAGE_BUCKET }}"
            echo "::set-output name=REACT_APP_FIREBASE_MESSAGING_SENDER_ID::${{ secrets.PROD_REACT_APP_FIREBASE_MESSAGING_SENDER_ID }}"
            echo "::set-output name=REACT_APP_FIREBASE_APP_ID::${{ secrets.PROD_REACT_APP_FIREBASE_APP_ID }}"
            echo "::set-output name=REACT_APP_NIGHTSCOUT_VALIDATION_ENDPOINT_URL::${{ secrets.PROD_REACT_APP_NIGHTSCOUT_VALIDATION_ENDPOINT_URL }}"
            echo "::set-output name=REACT_APP_I18N_DEBUG::false"
            echo "::set-output name=REACT_APP_DEBUG::false"
          else
            echo "::set-output name=REACT_APP_FIREBASE_API_KEY::${{ secrets.NIGHTLY_REACT_APP_FIREBASE_API_KEY }}"
            echo "::set-output name=REACT_APP_FIREBASE_AUTH_DOMAIN::${{ secrets.NIGHTLY_REACT_APP_FIREBASE_AUTH_DOMAIN }}"
            echo "::set-output name=REACT_APP_FIREBASE_DB_URL::${{ secrets.NIGHTLY_REACT_APP_FIREBASE_DB_URL }}"
            echo "::set-output name=REACT_APP_FIREBASE_PROJECT_ID::${{ secrets.NIGHTLY_REACT_APP_FIREBASE_PROJECT_ID }}"
            echo "::set-output name=REACT_APP_FIREBASE_STORAGE_BUCKET::${{ secrets.NIGHTLY_REACT_APP_FIREBASE_STORAGE_BUCKET }}"
            echo "::set-output name=REACT_APP_FIREBASE_MESSAGING_SENDER_ID::${{ secrets.NIGHTLY_REACT_APP_FIREBASE_MESSAGING_SENDER_ID }}"
            echo "::set-output name=REACT_APP_FIREBASE_APP_ID::${{ secrets.NIGHTLY_REACT_APP_FIREBASE_APP_ID }}"
            echo "::set-output name=REACT_APP_NIGHTSCOUT_VALIDATION_ENDPOINT_URL::${{ secrets.NIGHTLY_REACT_APP_NIGHTSCOUT_VALIDATION_ENDPOINT_URL }}"
            echo "::set-output name=REACT_APP_I18N_DEBUG::true"
            echo "::set-output name=REACT_APP_DEBUG::true"
          fi

      - name: "[SETUP] Clone repository"
        uses: actions/checkout@v2

      - name: "[SETUP] Enable Node v${{ matrix.node-version }}"
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: "[SETUP] Get yarn cache path"
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"

      - name: "[SETUP] (Re)store yarn cache"
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: "[SETUP] Install dependencies"
        run: yarn

      - name: "Lint all code"
        run: yarn lint

      - name: "Build i18n resource bundles"
        run: yarn workspace gluco-check-common run build

      - name: "Test CORE package"
        run: yarn workspace gluco-check-core run test:cov

      - name: "Build CORE package"
        run: yarn workspace gluco-check-core run build

      - name: "Build WEBHOOKS"
        run: yarn workspace gluco-check-webhooks run build

      - name: "Test FRONTEND"
        run: yarn workspace gluco-check-frontend run test:ci

      - name: "Build FRONTEND"
        env:
          REACT_APP_FIREBASE_API_KEY: ${{ steps.target.outputs.REACT_APP_FIREBASE_API_KEY }}
          REACT_APP_FIREBASE_AUTH_DOMAIN: ${{ steps.target.outputs.REACT_APP_FIREBASE_AUTH_DOMAIN }}
          REACT_APP_FIREBASE_DB_URL: ${{ steps.target.outputs.REACT_APP_FIREBASE_DB_URL }}
          REACT_APP_FIREBASE_PROJECT_ID: ${{ steps.target.outputs.REACT_APP_FIREBASE_PROJECT_ID }}
          REACT_APP_FIREBASE_STORAGE_BUCKET: ${{ steps.target.outputs.REACT_APP_FIREBASE_STORAGE_BUCKET }}
          REACT_APP_FIREBASE_MESSAGING_SENDER_ID: ${{ steps.target.outputs.REACT_APP_FIREBASE_MESSAGING_SENDER_ID }}
          REACT_APP_FIREBASE_APP_ID: ${{ steps.target.outputs.REACT_APP_FIREBASE_APP_ID }}
          REACT_APP_I18N_DEBUG: ${{ steps.target.outputs.REACT_APP_I18N_DEBUG }}
          REACT_APP_NIGHTSCOUT_VALIDATION_ENDPOINT_URL: ${{ steps.target.outputs.REACT_APP_NIGHTSCOUT_VALIDATION_ENDPOINT_URL }}
          REACT_APP_DEBUG: ${{ steps.target.outputs.REACT_APP_DEBUG }}
        run: yarn workspace gluco-check-frontend run build

      - name: "Deploy WEBHOOKS"
        if: ${{ steps.target.outputs.DEPLOY == 'true' }}
        uses: w9jds/firebase-action@master
        with:
          args: deploy --only functions
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          PROJECT_PATH: ./gluco-check-webhooks
          PROJECT_ID: ${{ steps.target.outputs.REACT_APP_FIREBASE_PROJECT_ID }}

      - name: "Deploy FRONTEND"
        if: ${{ steps.target.outputs.DEPLOY == 'true' }}
        uses: w9jds/firebase-action@master
        with:
          args: deploy --only hosting
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          PROJECT_PATH: ./gluco-check-frontend
          PROJECT_ID: ${{ steps.target.outputs.REACT_APP_FIREBASE_PROJECT_ID }}

      - name: "Upload coverage results"
        if: ${{ matrix.node-version == '14.x' }}
        run: bash <(curl -s https://codecov.io/bash)

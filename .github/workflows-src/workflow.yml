name: CI / CD

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]
  release:
    types: [published]

jobs:
  test:
    if: ${{ !contains(github.event.head_commit.message, '[skip ci]') }}
    name: "Run tests"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [10.x, 12.x, 14.x]

    steps:
      - name: "[SETUP] Print event info"
        uses: hmarr/debug-action@v2

      - name: "[SETUP] Clone repository"
        uses: actions/checkout@v2

      - name: "[SETUP] Set NodeJS version to ${{ matrix.node-version }}"
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: "[SETUP] Get yarn cache path"
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"

      - name: "[SETUP] (Re)store yarn cache"
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ matrix.node-version }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: "[SETUP] Install dependencies"
        run: yarn

      - name: "Run linters"
        run: yarn lint

      - name: "Build: i18n resource bundles"
        run: yarn workspace gluco-check-common run build

      - name: "Test: Core package"
        run: yarn workspace gluco-check-core run test:cov

      - name: "Build: Core package"
        run: yarn workspace gluco-check-core run build

      - name: "Build: Webhooks"
        run: yarn workspace gluco-check-webhooks run build

      - name: "Test: Frontend"
        run: yarn workspace gluco-check-frontend run test:ci

      - name: "Upload test coverage results"
        if: ${{ matrix.node-version == '14.x' }}
        run: bash <(curl -s https://codecov.io/bash)

      - name: "Tar workspace"
        if: ${{ matrix.node-version == '14.x' }}
        run: tar -czf ${{ runner.temp }}/workspace.tar ./

      - name: "Upload workspace"
        if: ${{ matrix.node-version == '14.x' }}
        uses: actions/upload-artifact@master
        with:
          name: ${{ github.run_id }}
          path: ${{ runner.temp }}/workspace.tar

  deploy-nightly-webhooks:
    name: Deploy webhooks (Nightly)
    environment:
      name: Nightly
      url: https://nightly.glucocheck.app/
    if: ${{ github.event_name == 'push' }}
    needs: test
    runs-on: ubuntu-latest

    steps: &deploy_webhooks
      - name: "Set NodeJS version to ${{ matrix.node-version }}"
        uses: actions/setup-node@v1
        with:
          node-version: "14.x"

      - uses: actions/download-artifact@master
        name: "Download workspace"
        with:
          name: ${{ github.run_id }}

      - name: "Untar workspace"
        run: tar -xf workspace.tar ./

      - name: "Deploy: Webhooks"
        uses: w9jds/firebase-action@master
        with:
          args: deploy --only functions
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          PROJECT_PATH: ./gluco-check-webhooks
          PROJECT_ID: ${{ secrets.REACT_APP_FIREBASE_PROJECT_ID }}

  deploy-nightly-frontend:
    name: Deploy frontend (Nightly)
    environment:
      name: Nightly
      url: https://nightly.glucocheck.app
    if: ${{ github.event_name == 'push' }}
    needs: test
    runs-on: ubuntu-latest

    steps: &deploy_frontend
      - name: "Set NodeJS version to ${{ matrix.node-version }}"
        uses: actions/setup-node@v1
        with:
          node-version: "14.x"

      - uses: actions/download-artifact@master
        name: "Download workspace"
        with:
          name: ${{ github.run_id }}

      - name: "Untar workspace"
        run: tar -xf workspace.tar ./

      - name: "Build: Frontend"
        env:
          REACT_APP_FIREBASE_API_KEY: ${{ secrets.REACT_APP_FIREBASE_API_KEY }}
          REACT_APP_FIREBASE_AUTH_DOMAIN: ${{ secrets.REACT_APP_FIREBASE_AUTH_DOMAIN }}
          REACT_APP_FIREBASE_DB_URL: ${{ secrets.REACT_APP_FIREBASE_DB_URL }}
          REACT_APP_FIREBASE_PROJECT_ID: ${{ secrets.REACT_APP_FIREBASE_PROJECT_ID }}
          REACT_APP_FIREBASE_STORAGE_BUCKET: ${{ secrets.REACT_APP_FIREBASE_STORAGE_BUCKET }}
          REACT_APP_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.REACT_APP_FIREBASE_MESSAGING_SENDER_ID }}
          REACT_APP_FIREBASE_APP_ID: ${{ secrets.REACT_APP_FIREBASE_APP_ID }}
          REACT_APP_I18N_DEBUG: ${{ secrets.REACT_APP_I18N_DEBUG }}
          REACT_APP_NIGHTSCOUT_VALIDATION_ENDPOINT_URL: ${{ secrets.REACT_APP_NIGHTSCOUT_VALIDATION_ENDPOINT_URL }}
          REACT_APP_DEBUG: ${{ secrets.REACT_APP_DEBUG }}
        run: yarn workspace gluco-check-frontend run build

      - name: "Deploy: Frontend"
        uses: w9jds/firebase-action@master
        with:
          args: deploy --only hosting
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          PROJECT_PATH: ./gluco-check-frontend
          PROJECT_ID: ${{ secrets.REACT_APP_FIREBASE_PROJECT_ID }}

  deploy-production-webhooks:
    name: Deploy webhooks (Prod)
    environment:
      name: Production
      url: https://glucocheck.app/
    if: ${{ github.event.action == 'published' && github.event.release.target_commitish == 'main' }}
    needs: test
    runs-on: ubuntu-latest
    steps: *deploy_webhooks

  deploy-production-frontend:
    name: Deploy frontend (Prod)
    environment:
      name: Production
      url: https://glucocheck.app
    if: ${{ github.event.action == 'published' && github.event.release.target_commitish == 'main' }}
    needs: test
    runs-on: ubuntu-latest
    steps: *deploy_frontend
